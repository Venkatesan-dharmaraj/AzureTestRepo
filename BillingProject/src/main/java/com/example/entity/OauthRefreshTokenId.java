package com.example.entity;

import java.sql.Blob;

// Generated 13 Sep, 2017 5:11:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.Arrays;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * OauthRefreshTokenId generated by hbm2java
 */
@Entity
@Table(name = "oauth_refresh_token")
public class OauthRefreshTokenId implements java.io.Serializable {
	@Id
	private String tokenId;
	private Blob token;
	private Blob authentication;

	public OauthRefreshTokenId() {
	}

	public OauthRefreshTokenId(String tokenId, Blob token,
			Blob authentication) {
		this.tokenId = tokenId;
		this.token = token;
		this.authentication = authentication;
	}

	@Column(name = "token_id")
	public String getTokenId() {
		return this.tokenId;
	}

	public void setTokenId(String tokenId) {
		this.tokenId = tokenId;
	}

	@Column(name = "token")
	public Blob getToken() {
		return this.token;
	}

	public void setToken(Blob token) {
		this.token = token;
	}

	@Column(name = "authentication")
	public Blob getAuthentication() {
		return this.authentication;
	}

	public void setAuthentication(Blob authentication) {
		this.authentication = authentication;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((authentication == null) ? 0 : authentication.hashCode());
		result = prime * result + ((token == null) ? 0 : token.hashCode());
		result = prime * result + ((tokenId == null) ? 0 : tokenId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OauthRefreshTokenId other = (OauthRefreshTokenId) obj;
		if (authentication == null) {
			if (other.authentication != null)
				return false;
		} else if (!authentication.equals(other.authentication))
			return false;
		if (token == null) {
			if (other.token != null)
				return false;
		} else if (!token.equals(other.token))
			return false;
		if (tokenId == null) {
			if (other.tokenId != null)
				return false;
		} else if (!tokenId.equals(other.tokenId))
			return false;
		return true;
	}

	

}
